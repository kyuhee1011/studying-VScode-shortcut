'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*
he MIT License (MIT)
opyright (c) 2016 Michael Cereda
http://michaelcereda.com

ermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

he above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


var _lodash = require('lodash');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ExternalInterface = function () {
  function ExternalInterface(opts) {
    var _this = this;

    _classCallCheck(this, ExternalInterface);

    this.settings = {};

    Object.assign(this.settings, this.settings, opts || {});

    this._output = opts.output || console.log;
    this._context = opts.context || {};
    this._stack = opts.stack || {};
    this._parent_key = opts.parent_key || "";
    this._printFn = opts.print;
    this._cached_messages = [];

    var methods = (0, _lodash.union)(['log', 'info', 'warning', 'success', 'error'], Object.keys(opts.template));
    methods.map(function (method, i) {
      _this[method] = function (contentType) {
        var _ct = contentType;
        return function (content) {
          if (typeof content !== 'string') {
            Object.assign(content, _this._context, content);
          }
          _this._output(content, _ct);
        };
      }(method);
    });

    if (this._parent_key !== '') {
      this['clear'] = function () {
        _this._stack = {};
      };
      this['get'] = function () {
        return _this._stack;
      };
      this['print'] = function () {
        // console.log(this.settings)
        _this._printFn();
      };
    }
  }

  _createClass(ExternalInterface, [{
    key: 'stack',
    value: function stack(key) {
      var newSettings = {};

      Object.assign(newSettings, this.settings, { stack: {}, parent_key: key });
      this.stack[key] = new ExternalInterface(newSettings);
      return this.stack[key];
    }
  }, {
    key: 'context',
    value: function context(ctx) {
      this._context = ctx;
      return this;
    }
  }, {
    key: 'addCustomMethod',
    value: function addCustomMethod(name, fn) {
      this[name] = fn;
    }
  }]);

  return ExternalInterface;
}();

module.exports = function (opts) {
  opts = opts || {};

  var output = function output(opts) {
    var _opts = opts;

    return function (content, contentType) {
      var tmpl;
      if (!_opts || !_opts.template || !_opts.template[contentType]) {
        tmpl = function tmpl(x) {
          return x;
        };
      } else {
        tmpl = _opts.template[contentType];
      }
      if (!content) content = '';

      var str = tmpl(content);

      if (_opts.printOutput === false) {
        return str;
      }
      console.log(str);
    };
  };
  Object.assign(opts, {
    output: output
  }, opts);
  // Inizializing output function
  opts.output = opts.output(opts);
  opts.print = opts.output;
  // console.log(opts);
  return new ExternalInterface(opts);
};